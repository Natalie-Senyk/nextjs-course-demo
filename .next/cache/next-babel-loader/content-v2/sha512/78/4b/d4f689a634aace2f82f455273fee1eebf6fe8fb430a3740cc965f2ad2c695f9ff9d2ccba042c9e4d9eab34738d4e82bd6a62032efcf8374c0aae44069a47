{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u043B\\u0430\\u0434\\u0435\\u043B\\u0435\\u0446\\\\Desktop\\\\next.js project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport Head from 'next/head';\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetups.image,\n      title: props.meetups.title,\n      address: props.meetups.address,\n      description: props.meetups.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://new-user-testapp:528703N@cluster0.220tj.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://new-user-testapp:528703N@cluster0.220tj.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetups: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.data.title,\n        address: selectedMeetup.data.address,\n        image: selectedMeetup.data.image,\n        description: selectedMeetup.data.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/Владелец/Desktop/next.js project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","Fragment","Head","MeetupDetail","MeetupDetails","props","meetupData","title","description","meetups","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id","data"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,4BACC,QAAC,IAAD;AAAA,8BACC;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAKA,QAAC,YAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACI,OAAN,CAAcC,KADvB;AAEE,MAAA,KAAK,EAAEL,KAAK,CAACI,OAAN,CAAcF,KAFvB;AAGE,MAAA,OAAO,EAAEF,KAAK,CAACI,OAAN,CAAcE,OAHzB;AAIE,MAAA,WAAW,EAAEN,KAAK,CAACI,OAAN,CAAcD;AAJ7B;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;AAED,OAAO,eAAeI,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CACnB,uGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMR,OAAO,GAAG,MAAMO,iBAAiB,CAACE,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEd,OAAO,CAACe,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMd,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CACnB,uGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMc,cAAc,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0B;AACrDb,IAAAA,GAAG,EAAEnB,QAAQ,CAAC2B,QAAD;AADwC,GAA1B,CAA7B;AAIAd,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLI,MAAAA,OAAO,EAAE;AACPwB,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADG;AAEPrB,QAAAA,KAAK,EAAEwB,cAAc,CAACG,IAAf,CAAoB3B,KAFpB;AAGPI,QAAAA,OAAO,EAAEoB,cAAc,CAACG,IAAf,CAAoBvB,OAHtB;AAIPD,QAAAA,KAAK,EAAEqB,cAAc,CAACG,IAAf,CAAoBxB,KAJpB;AAKPF,QAAAA,WAAW,EAAEuB,cAAc,CAACG,IAAf,CAAoB1B;AAL1B;AADJ;AADF,GAAP;AAWD;AAED,eAAeJ,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\"\r\nimport { Fragment } from \"react\"\r\nimport Head from 'next/head'\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"\r\n\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <Fragment>\r\n     <Head>\r\n      <title>{props.meetupData.title}</title>\r\n      <meta name=\"description\" content={props.meetupData.description} />\r\n    </Head>\r\n    <MeetupDetail\r\n      image={props.meetups.image}\r\n      title={props.meetups.title}\r\n      address={props.meetups.address}\r\n      description={props.meetups.description}\r\n    />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://new-user-testapp:528703N@cluster0.220tj.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  )\r\n  const db = client.db()\r\n\r\n  const meetupsCollection = db.collection(\"meetups\")\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray()\r\n\r\n  client.close()\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://new-user-testapp:528703N@cluster0.220tj.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  )\r\n  const db = client.db()\r\n\r\n  const meetupsCollection = db.collection(\"meetups\")\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  })\r\n\r\n  client.close()\r\n\r\n  return {\r\n    props: {\r\n      meetups: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.data.title,\r\n        address: selectedMeetup.data.address,\r\n        image: selectedMeetup.data.image,\r\n        description: selectedMeetup.data.description\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\nexport default MeetupDetails\r\n"]},"metadata":{},"sourceType":"module"}
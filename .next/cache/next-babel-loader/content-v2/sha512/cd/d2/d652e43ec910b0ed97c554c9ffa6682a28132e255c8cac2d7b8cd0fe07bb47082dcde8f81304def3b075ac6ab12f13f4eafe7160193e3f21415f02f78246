{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u043B\\u0430\\u0434\\u0435\\u043B\\u0435\\u0446\\\\Desktop\\\\next.js project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\";\nimport Head from 'next/head';\nimport { MongoClient } from 'mongodb';\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return;\n\n  /*#__PURE__*/\n  _jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n} //this is reserved name in next.js for the prerendering process to include fetch data\n\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect('mongodb+srv://new-user-testapp:528703N@cluster0.220tj.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.data.title,\n        address: meetup.data.address,\n        image: meetup.data.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1 //# of seconds\n\n  };\n} //this is alternative for getStaticProps - if we need to track data from server that change very fast, every second etc\n// export async function getServerSideProps(context) {\n//   const req = context.req\n//   const res = context.res\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   }\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/Владелец/Desktop/next.js project/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["Head","MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","data","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAAQC,WAAR,QAA0B,SAA1B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAEvB;;AACA;AAAA,UAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AACD,C,CACD;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AAErC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAGA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC9BC,QAAAA,KAAK,EAAED,MAAM,CAACE,IAAP,CAAYD,KADW;AAE9BE,QAAAA,OAAO,EAAEH,MAAM,CAACE,IAAP,CAAYC,OAFS;AAG9BC,QAAAA,KAAK,EAAEJ,MAAM,CAACE,IAAP,CAAYE,KAHW;AAI9BC,QAAAA,EAAE,EAAEL,MAAM,CAACM,GAAP,CAAWC,QAAX;AAJ0B,OAAL,CAAlB;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE,CATP,CASS;;AATT,GAAP;AAWD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAerB,QAAf","sourcesContent":["import Head from 'next/head'\r\nimport {MongoClient} from 'mongodb'\r\nimport MeetupList from \"../components/meetups/MeetupList\"\r\n\r\n\r\nfunction HomePage(props) {\r\n\r\n  return \r\n  <MeetupList meetups={props.meetups} />\r\n}\r\n//this is reserved name in next.js for the prerendering process to include fetch data\r\nexport async function getStaticProps() {\r\n\r\n  const client = await MongoClient.connect('mongodb+srv://new-user-testapp:528703N@cluster0.220tj.mongodb.net/meetups?retryWrites=true&w=majority')\r\n  const db = client.db()\r\n\r\n  const meetupsCollection = db.collection('meetups')\r\n\r\n  const meetups = await meetupsCollection.find().toArray()\r\n\r\n  client.close()\r\n\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map(meetup => ({\r\n        title: meetup.data.title,\r\n        address: meetup.data.address,\r\n        image: meetup.data.image,\r\n        id: meetup._id.toString()\r\n      }))\r\n    },\r\n    revalidate: 1 //# of seconds\r\n  }\r\n}\r\n\r\n//this is alternative for getStaticProps - if we need to track data from server that change very fast, every second etc\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req\r\n//   const res = context.res\r\n\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default HomePage\r\n"]},"metadata":{},"sourceType":"module"}
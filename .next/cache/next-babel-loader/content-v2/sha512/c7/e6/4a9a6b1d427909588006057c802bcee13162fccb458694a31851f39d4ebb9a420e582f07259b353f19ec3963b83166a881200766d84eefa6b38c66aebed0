{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u043B\\u0430\\u0434\\u0435\\u043B\\u0435\\u0446\\\\Desktop\\\\next.js project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://pvpharm.com/wp-content/uploads/2021/03/Prague.jpg\",\n  address: \"Some address 5, 12345 Some City\",\n  description: \"This is a first meetup\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"https://static.dw.com/image/45716657_303.jpg\",\n  address: \"Some address 6, 12346 Some City\",\n  description: \"This is a second meetup\"\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n} //this is reserved name in next.js for the prerendering process to include fetch data\n\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect('mongodb+srv://new-user-testapp:528703N@cluster0.220tj.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address\n      }))\n    },\n    revalidate: 1 //# of seconds\n\n  };\n} //this is alternative for getStaticProps - if we need to track data from server that change very fast, every second etc\n// export async function getServerSideProps(context) {\n//   const req = context.req\n//   const res = context.res\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   }\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/Владелец/Desktop/next.js project/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","revalidate"],"mappings":";;AAAA,SAAQA,WAAR,QAA0B,SAA1B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EAAE,2DAHT;AAIEC,EAAAA,OAAO,EAAE,iCAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CADoB,EAQpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EAAE,8CAHT;AAIEC,EAAAA,OAAO,EAAE,iCAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CARoB,CAAtB;;AAiBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAEvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CACD;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AAErC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAGA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC9BjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADgB;AAE9BE,QAAAA,OAAO,EAAEe,MAAM,CAACf;AAFc,OAAL,CAAlB;AADJ,KADF;AAQLgB,IAAAA,UAAU,EAAE,CARP,CAQS;;AART,GAAP;AAUD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAed,QAAf","sourcesContent":["import {MongoClient} from 'mongodb'\r\nimport MeetupList from \"../components/meetups/MeetupList\"\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"A First Meetup\",\r\n    image: \"https://pvpharm.com/wp-content/uploads/2021/03/Prague.jpg\",\r\n    address: \"Some address 5, 12345 Some City\",\r\n    description: \"This is a first meetup\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"A Second Meetup\",\r\n    image: \"https://static.dw.com/image/45716657_303.jpg\",\r\n    address: \"Some address 6, 12346 Some City\",\r\n    description: \"This is a second meetup\",\r\n  },\r\n]\r\n\r\nfunction HomePage(props) {\r\n\r\n  return <MeetupList meetups={props.meetups} />\r\n}\r\n//this is reserved name in next.js for the prerendering process to include fetch data\r\nexport async function getStaticProps() {\r\n\r\n  const client = await MongoClient.connect('mongodb+srv://new-user-testapp:528703N@cluster0.220tj.mongodb.net/meetups?retryWrites=true&w=majority')\r\n  const db = client.db()\r\n\r\n  const meetupsCollection = db.collection('meetups')\r\n\r\n  const meetups = await meetupsCollection.find().toArray()\r\n\r\n  client.close()\r\n\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map(meetup => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        \r\n      }))\r\n    },\r\n    revalidate: 1 //# of seconds\r\n  }\r\n}\r\n\r\n//this is alternative for getStaticProps - if we need to track data from server that change very fast, every second etc\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req\r\n//   const res = context.res\r\n\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default HomePage\r\n"]},"metadata":{},"sourceType":"module"}
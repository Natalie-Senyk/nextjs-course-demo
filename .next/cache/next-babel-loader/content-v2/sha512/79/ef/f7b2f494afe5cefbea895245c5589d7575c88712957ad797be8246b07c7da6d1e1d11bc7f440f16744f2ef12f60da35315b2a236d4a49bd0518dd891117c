{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u043B\\u0430\\u0434\\u0435\\u043B\\u0435\\u0446\\\\Desktop\\\\next.js project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport Head from 'next/head';\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse React meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetups.image,\n      title: props.meetups.title,\n      address: props.meetups.address,\n      description: props.meetups.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/Владелец/Desktop/next.js project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","Head","MeetupDetail","MeetupDetails","props","meetups","image","title","address","description"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,QAAD;AAAA,4BACC,QAAC,IAAD;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAKA,QAAC,YAAD;AACE,MAAA,KAAK,EAAEC,KAAK,CAACC,OAAN,CAAcC,KADvB;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAcE,KAFvB;AAGE,MAAA,OAAO,EAAEH,KAAK,CAACC,OAAN,CAAcG,OAHzB;AAIE,MAAA,WAAW,EAAEJ,KAAK,CAACC,OAAN,CAAcI;AAJ7B;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;KAfQN,a;;AAkET,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\"\r\nimport { Fragment } from \"react\"\r\nimport Head from 'next/head'\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"\r\n\r\nfunction MeetupDetails() {\r\n  return (\r\n    <Fragment>\r\n     <Head>\r\n      <title>React Meetups</title>\r\n      <meta name=\"description\" content=\"Browse React meetups\" />\r\n    </Head>\r\n    <MeetupDetail\r\n      image={props.meetups.image}\r\n      title={props.meetups.title}\r\n      address={props.meetups.address}\r\n      description={props.meetups.description}\r\n    />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://new-user-testapp:528703N@cluster0.220tj.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  )\r\n  const db = client.db()\r\n\r\n  const meetupsCollection = db.collection(\"meetups\")\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray()\r\n\r\n  client.close()\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://new-user-testapp:528703N@cluster0.220tj.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  )\r\n  const db = client.db()\r\n\r\n  const meetupsCollection = db.collection(\"meetups\")\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  })\r\n\r\n  client.close()\r\n\r\n  return {\r\n    props: {\r\n      meetups: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.data.title,\r\n        address: selectedMeetup.data.address,\r\n        image: selectedMeetup.data.image,\r\n        description: selectedMeetup.data.description\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\nexport default MeetupDetails\r\n"]},"metadata":{},"sourceType":"module"}
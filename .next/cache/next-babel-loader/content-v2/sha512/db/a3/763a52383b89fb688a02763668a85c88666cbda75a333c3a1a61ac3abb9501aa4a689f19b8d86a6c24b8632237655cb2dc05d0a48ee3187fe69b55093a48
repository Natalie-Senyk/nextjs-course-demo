{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u043B\\u0430\\u0434\\u0435\\u043B\\u0435\\u0446\\\\Desktop\\\\next.js project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\";\nimport Head from 'next/head';\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { Fragment } from 'react';\n\nfunction HomePage(props) {\n  return;\n\n  /*#__PURE__*/\n  _jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n} //this is reserved name in next.js for the prerendering process to include fetch data\n\n\n_c = HomePage;\n//this is alternative for getStaticProps - if we need to track data from server that change very fast, every second etc\n// export async function getServerSideProps(context) {\n//   const req = context.req\n//   const res = context.res\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   }\n// }\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Владелец/Desktop/next.js project/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["Head","MeetupList","Fragment","HomePage","props","meetups"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAEvB;;AACA;AAAA,UAAC,QAAD;AAAA,4BACA,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD,C,CACD;;;KAVSF,Q;AAoCT;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,QAAf","sourcesContent":["import Head from 'next/head'\r\nimport {MongoClient} from 'mongodb'\r\nimport MeetupList from \"../components/meetups/MeetupList\"\r\nimport { Fragment } from 'react'\r\n\r\n\r\nfunction HomePage(props) {\r\n\r\n  return \r\n  <Fragment>\r\n  <Head>\r\n    <title>React Meetups</title>\r\n  </Head>\r\n  <MeetupList meetups={props.meetups} />\r\n  </Fragment>\r\n}\r\n//this is reserved name in next.js for the prerendering process to include fetch data\r\nexport async function getStaticProps() {\r\n\r\n  const client = await MongoClient.connect('mongodb+srv://new-user-testapp:528703N@cluster0.220tj.mongodb.net/meetups?retryWrites=true&w=majority')\r\n  const db = client.db()\r\n\r\n  const meetupsCollection = db.collection('meetups')\r\n\r\n  const meetups = await meetupsCollection.find().toArray()\r\n\r\n  client.close()\r\n\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map(meetup => ({\r\n        title: meetup.data.title,\r\n        address: meetup.data.address,\r\n        image: meetup.data.image,\r\n        id: meetup._id.toString()\r\n      }))\r\n    },\r\n    revalidate: 1 //# of seconds\r\n  }\r\n}\r\n\r\n//this is alternative for getStaticProps - if we need to track data from server that change very fast, every second etc\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req\r\n//   const res = context.res\r\n\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default HomePage\r\n"]},"metadata":{},"sourceType":"module"}